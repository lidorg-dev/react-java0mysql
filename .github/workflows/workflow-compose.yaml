name: Module-6-docker-compose

on:
  push:
    branches: [ "Dev"]
  pull_request:
    branches: [ "Dev"]

jobs:

  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker compose
      run: docker compose up -d
      
  Test:
    needs: build 
    runs-on: self-hosted
    steps:
      - name: list containers & Test up&running
        run: |
         sleep 15 
         if [ $(docker ps -a | grep -q "Exited") ]; then
            echo "At least one container in 'Exited' state found. List Test Failed."
         else
            echo "No containers in 'Exited' state found. List Test passed."
         fi
      - name: test front end container  
        run: sleep 5 && curl http://localhost:3000
  push_to_dockerHub:
    needs: build
    runs-on: self-hosted
    steps:
      - name: docker login
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: | 
          docker login --username ${DOCKERHUB_USERNAME} --password-stdin <<< "${DOCKERHUB_TOKEN}"
          for image in $(docker images --format "{{.Repository}}" | grep react)
            do
             docker tag ${image} arielguez/${image}:${GITHUB_RUN_NUMBER}         
             docker push arielguez/${image}:${GITHUB_RUN_NUMBER}
          done
          mysql_and_tag=$(docker images --format "{{.Repository}}:{{.Tag}}"
          mysql_tag=$(echo ${mysql_and_tag} | awk -F: '{print $2}')
          docker tag mysql:${mysql_tag} arielguez/mysql:${GITHUB_RUN_NUMBER}
          docker push arielguez/mysql:${GITHUB_RUN_NUMBER}
          

          
           
          
        
     
 
   


